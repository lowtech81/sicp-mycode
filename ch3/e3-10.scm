; Exercise 3.10.  In the make-withdraw procedure, the local variable
; balance is created as a parameter of make-withdraw. We could also
; create the local state variable explicitly, using let, as follows:

(define (make-withdraw initial-amount)
  (let ((balance initial-amount))
    (lambda (amount)
      (if (>= balance amount)
          (begin (set! balance (- balance amount))
                 balance)
          "Insufficient funds"))))

; Recall from section 1.3.2 that let is simply syntactic sugar for a
; procedure call:

(let ((<var> <exp>)) <body>)

; is interpreted as an alternate syntax for

((lambda (<var>) <body>) <exp>)

; Use the environment model to analyze this alternate version of
; make-withdraw, drawing figures like the ones above to illustrate the
; interactions

(define W1 (make-withdraw 100))

(W1 50)

(define W2 (make-withdraw 100))

; Show that the two versions of make-withdraw create objects with the
; same behavior. How do the environment structures differ for the two
; versions?
; ------------------------------------------------------------
(define W1 (make-withdraw 100))

From: http://community.schemewiki.org/?sicp-ex-3.10

When make-withdraw is evaluated, E0 is created with Frame A having the
initial-mount binding. Next, as a result of the evaluation of the 
anonymous function (generated by the set (Edit: let?) structure), Frame B is created
with the binding of balance (E1 is the pointer to this frame).

         _______________________
global->| make-withdraw : *     |
env.    | W1 :  *         |     |
         -------|---^-----|---^-
                |   |     |   |
                |   |     parameter: initial-mount
                |   |     body: ((lambda (balance) ((...))) initial-mount)
                |   |
                |  _|___Frame_A__________
                | | initial-mount : 100  |<- E0
                |  -^--------------------
                |   |
                |  _|__________Frame_B______
                | | balance : initial-mount | <- E1
                |  -^-----------------------
                |   |
                parameter: amount
                body: (if (>= balance amount) ... )

(W1 50)

Set! will affect Frame B, initial-mount remains unchanged in Frame A. 
         _______________________
global->| make-withdraw : *     |
env.    | W1 :  *         |     |
         -------|---^-----|---^-
                |   |     |   |
                |   |     parameter: initial-mount
                |   |     body: ((lambda (balance) ((...))) initial-mount)
                |   |
                |  _|___Frame_A__________
                | | initial-mount : 100  |<- E0
                |  -^--------------------
                |   |
                |  _|__________Frame_B___
                | | balance : 50         | <- E1
                |  -^--------------------
                |   |
                parameter: amount
                body: (if (>= balance amount) ... )